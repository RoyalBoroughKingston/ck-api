version: "3"

services:
  app:
    image: royal-borough-kingston/ck-api/app
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
      - redis
      - elasticsearch
    command: /usr/bin/supervisord

  queue-worker:
    image: royal-borough-kingston/ck-api/app
    volumes:
      - .:/var/www/html
    command: php artisan queue:work --queue=default,search,notifications --tries=1
    depends_on:
      - mysql
      - redis
      - elasticsearch

  scheduler:
    image: royal-borough-kingston/ck-api/app
    volumes:
      - .:/var/www/html
    command: php artisan ck:run-scheduler
    depends_on:
      - mysql
      - redis
      - elasticsearch

  node:
    image: royal-borough-kingston/ck-api/node
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - mysql-data:/var/lib/mysql

  mysql-testing:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    command: mysqld --general-log=1 --general-log-file=/var/log/mysql/general-log.log

  redis:
    image: grokzen/redis-cluster:6.0.16
    volumes:
      - redis-data:/data

  redis-testing:
    image: grokzen/redis-cluster:6.0.16

  elasticsearch:
    image: elasticsearch:7.9.3
    environment:
      - "discovery.type=single-node"
      - "xpack.ml.enabled=false"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  troposphere:
    image: royal-borough-kingston/ck-api/troposphere
    build:
      context: ./docker/troposphere
      dockerfile: Dockerfile
    volumes:
      - ./aws:/tmp
    command: python ${CFN_TEMPLATE}.py

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  elasticsearch-data:
    driver: local
