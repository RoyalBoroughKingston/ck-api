# /locations
root:
  get:
    tags: [Locations]
    summary: List all the locations
    description: |
      **Permission:** `Open`
    security: []
    parameters:
    - $ref: /docs/core/parameters/page.yaml
    - $ref: /docs/core/parameters/per-page.yaml
    - $ref: /docs/core/parameters/filter-id.yaml
    - name: filter[address_line_1]
      in: query
      description: Filter by address line 1
      schema:
        type: string
    - name: filter[address_line_2]
      in: query
      description: Filter by address line 2
      schema:
        type: string
    - name: filter[address_line_3]
      in: query
      description: Filter by address line 3
      schema:
        type: string
    - name: filter[city]
      in: query
      description: Filter by city
      schema:
        type: string
    - name: filter[county]
      in: query
      description: Filter by county
      schema:
        type: string
    - name: filter[postcode]
      in: query
      description: Filter by postcode
      schema:
        type: string
    - name: filter[country]
      in: query
      description: Filter by country
      schema:
        type: string
    - name: sort
      in: query
      description: The fields to sort by [`address_line_1`, `address_line_2`, `address_line_3`, `city`, `county`, `postcode`, `country`]
      schema:
        type: string
        default: address_line_1,address_line_2,address_line_3,city,county,postcode,country
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
              - $ref: /docs/core/responses/resource-collection.yaml
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: /docs/core/resources/location.yaml
  post:
    tags: [Locations]
    summary: Create a location
    description: |
      **Permission:** `Service Admin`
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/location.yaml#/store
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: /docs/core/resources/location.yaml

# /locations/{location}
nested:
  get:
    tags: [Locations]
    summary: Get a specific location
    description: |
      **Permission:** `Open`
    security: []
    parameters:
    - name: location
      in: path
      description: The ID of the location
      required: true
      schema:
        type: string
        format: uuid
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: /docs/core/resources/location.yaml

  put:
    tags: [Locations]
    summary: Update a specific location
    description: |
      **Permission:** `Service Admin`
    parameters:
    - name: location
      in: path
      description: The ID of the location
      required: true
      schema:
        type: string
        format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/location.yaml#/update
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: The update request has been received and needs to be reviewed
                id:
                  type: string
                  format: uuid
                  description: The ID of the update request
                data:
                  $ref: /docs/core/requests/location.yaml#/update

  delete:
    tags: [Locations]
    summary: Delete a specific location
    description: |
      **Permission:** `Global Admin`
    parameters:
    - name: location
      in: path
      description: The ID of the location
      required: true
      schema:
        type: string
        format: uuid
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/responses/resource-deleted.yaml
