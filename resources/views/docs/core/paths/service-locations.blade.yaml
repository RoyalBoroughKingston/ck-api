# /service-locations
root:
  get:
    tags: [Service Locations]
    summary: List all the service locations
    description: |
       **Permission:** `Open`
    security: []
    parameters:
    - $ref: /docs/core/parameters/page.yaml
    - $ref: /docs/core/parameters/filter-id.yaml
    - name: filter[service_id]
      in: query
      description: The ID of the service
      schema:
        type: string
        format: uuid
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
                - $ref: /docs/core/responses/resource-collection.yaml
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: /docs/core/resources/service-location.yaml

  post:
    tags: [Service Locations]
    summary: Create a service location
    description: |
      **Permission:** `Service Admin`
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/service-location.yaml#/store
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/resources/service-location.yaml

# /service-locations/{service_location}
nested:
  get:
    tags: [Service Locations]
    summary: Get a specific service location
    description: |
       **Permission:** `Open`
    security: []
    parameters:
      - name: service_location
        in: path
        description: The ID of the service location
        required: true
        schema:
          type: string
          format: uuid
        example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/resources/service-location.yaml

  put:
    tags: [Service Locations]
    summary: Update a specific service location
    description: |
       **Permission:** `Service Admin`
    parameters:
      - name: service_location
        in: path
        description: The ID of the service location
        required: true
        schema:
          type: string
          format: uuid
        example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/service-location.yaml#/update
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: The update request has been received and needs to be reviewed
                data:
                  $ref: /docs/core/requests/service-location.yaml#/update

  delete:
    tags: [Service Locations]
    summary: Delete a specific service location
    description: |
       **Permission:** `Super Admin`
    parameters:
      - name: service_location
        in: path
        description: The ID of the service location
        required: true
        schema:
          type: string
          format: uuid
        example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/responses/resource-deleted.yaml
