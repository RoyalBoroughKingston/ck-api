# /collections/personas
root:
  get:
    tags: ["Collection: Personas"]
    summary: List all the persona collections
    description: |
      **Permission:** `Open`

      ---

      Collections are returned in ascending order of the order field.
    security: []
    parameters:
      - $ref: /docs/core/parameters/page.yaml
      - $ref: /docs/core/parameters/per-page.yaml
      - $ref: /docs/core/parameters/filter-id.yaml
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
                - $ref: /docs/core/responses/resource-collection.yaml
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: /docs/core/resources/persona-collection.yaml

  post:
    tags: ["Collection: Personas"]
    summary: Create a persona collection
    description: |
      **Permission:** `Super Admin`
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/persona-collection.yaml#/store
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: /docs/core/resources/persona-collection.yaml

# /collections/personas/index
index:
  post:
    tags: ["Collection: Personas"]
    summary: List all the persona collections
    description: |
      This is an alias of `GET /collections/personas` which allows all the query string parameters
      to be passed as part of the request body.

# /collections/personas/{persona}
nested:
  get:
    tags: ["Collection: Personas"]
    summary: Get a specific persona collection
    description: |
      **Permission:** `Open`
    security: []
    parameters:
      - name: persona
        in: path
        description: The ID of the persona collection
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: /docs/core/resources/persona-collection.yaml

  put:
    tags: ["Collection: Personas"]
    summary: Update a specific persona collection
    description: |
      **Permission:** `Super Admin`
    parameters:
      - name: persona
        in: path
        description: The ID of the persona collection
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/persona-collection.yaml#/update
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: /docs/core/resources/persona-collection.yaml

  delete:
    tags: ["Collection: Personas"]
    summary: Delete a specific persona collection
    description: |
      **Permission:** `Super Admin`
    parameters:
      - name: persona
        in: path
        description: The ID of the persona collection
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/responses/resource-deleted.yaml

# /collections/personas/{persona}/image
image:
  get:
    tags: ["Collection: Personas"]
    summary: Get a specific persona collection's image
    description: |
      **Permission:** `Open`
    security: []
    parameters:
      - name: persona
        in: path
        description: The ID of the persona collection
        required: true
        schema:
          type: string
          format: uuid
      - $ref: /docs/core/parameters/max-dimension.yaml
    responses:
      200:
        content:
          image/png:
            schema:
              type: string
