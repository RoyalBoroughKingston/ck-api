# /collections/categories
root:
  get:
    tags: ["Collection: Categories"]
    summary: List all the category collections
    description: |
      **Permission:** `Open`
    security: []
    parameters:
    - $ref: /docs/core/parameters/page.yaml
    - $ref: /docs/core/parameters/filter-id.yaml
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
              - $ref: /docs/core/responses/resource-collection.yaml
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: /docs/core/resources/category-collection.yaml

  post:
    tags: ["Collection: Categories"]
    summary: Create a category collection
    description: |
      **Permission:** `Super Admin`
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/category-collection.yaml#/store
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/resources/category-collection.yaml

# /collections/categories/{category}
nested:
  get:
    tags: ["Collection: Categories"]
    summary: Get a specific category collection
    description: |
      **Permission:** `Open`
    security: []
    parameters:
    - name: category
      in: path
      description: The ID of the category collection
      required: true
      schema:
        type: string
        format: uuid
      example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/resources/category-collection.yaml

  put:
    tags: ["Collection: Categories"]
    summary: Update a specific category collection
    description: |
      **Permission:** `Super Admin`
    parameters:
    - name: category
      in: path
      description: The ID of the category collection
      required: true
      schema:
        type: string
        format: uuid
      example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: /docs/core/requests/category-collection.yaml#/update
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/resources/category-collection.yaml

  delete:
    tags: ["Collection: Categories"]
    summary: Delete a specific category collection
    description: |
      **Permission:** `Super Admin`
    parameters:
    - name: category
      in: path
      description: The ID of the category collection
      required: true
      schema:
        type: string
        format: uuid
      example: 38e06e93-79b2-4c38-85bf-7749ebc7044b
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: /docs/core/responses/resource-deleted.yaml
